version: '3'

services:
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    ports:
      - '80:80'
    depends_on:
      - admin
      - logs
    volumes:
      - letsencrypt:/etc/letsencrypt
      - static_root:/usr/share/nginx/html/static_root:ro
      - ./.env:/.env:ro

  # TODO: rename to app
  admin:
    container_name: admin
    build:
      context: ./admin
    volumes:
      - ./.env:/.env
      - ./admin/app:/app
      - static_root:/static_root
      - services_config:/config
    depends_on:
      - db
      - harbor
      - redis
      - upstream

  celery:
    container_name: celeryd
    build:
      context: ./admin
    volumes:
      - ./.env:/.env
      - ./admin/app:/app
    depends_on:
      - db
      - redis
    environment:
      RUN_CELERY: 1

  db:
    container_name: db
    image: library/postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: postgres

  redis:
    container_name: redis
    image: library/redis:6-alpine
    volumes:
      - redis_data:/data

  harbor:
    container_name: harbor
    build:
      context: ./liquidsoap
      dockerfile: Dockerfile
    image: dtcooper/test:${CARB_VERSION:-latest}
    ports:
      - '8001:8001'
    volumes:
      - services_config:/config:ro
    environment:
      CONTAINER_NAME: harbor

  upstream:
    container_name: upstream
    build:
      context: ./liquidsoap
      dockerfile: Dockerfile
    volumes:
      - services_config:/config:ro
    environment:
      CONTAINER_NAME: upstream

  logs:
    container_name: logs
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DOZZLE_BASE: "/logs"
      DOZZLE_TAILSIZE: 5000

volumes:
  letsencrypt:
  postgres_data:
  redis_data:
  services_config:
  static_root:

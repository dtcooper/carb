version: '3'

services:
  nginx:
    container_name: nginx
    image: dtcooper/carb-nginx:${CARB_VERSION:-latest}
    restart: always
    build:
      context: ./nginx
    ports:
      - '80:80'
    depends_on:
      - app
      - logs
      - sse
    volumes:
      - static_root:/static_root:ro
      - media_root:/media_root:ro
      - ./.env:/.env:ro

  app:
    container_name: app
    image: dtcooper/carb-app:${CARB_VERSION:-latest}
    restart: always
    build:
      context: ./app
    volumes:
      - ./.env:/.env:ro
      - static_root:/static_root
      - media_root:/media_root
      - services_config:/config
    depends_on:
      - db
      - harbor
      - redis
      - upstream

  tasks:
    container_name: tasks
    image: dtcooper/carb-app:${CARB_VERSION:-latest}
    restart: always
    build:
      context: ./app
    volumes:
      - ./.env:/.env:ro
      - media_root:/media_root
    depends_on:
      - db
      - redis
    environment:
      RUN_HUEY: 1

  sse:
    container_name: sse
    image: dtcooper/carb-app:${CARB_VERSION:-latest}
    restart: always
    build:
      context: ./app
    volumes:
      - ./.env:/.env:ro
    depends_on:
      - redis
    environment:
      RUN_SSE: 1

  db:
    container_name: db
    image: library/postgres:13-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_PASSWORD: postgres

  redis:
    container_name: redis
    image: library/redis:6-alpine
    restart: always
    volumes:
      - redis_data:/data

  harbor:
    container_name: harbor
    image: dtcooper/carb-liquidsoap:${CARB_VERSION:-latest}
    restart: always
    build:
      context: ./liquidsoap
      dockerfile: Dockerfile
    ports:
      - '8001:8001'
    volumes:
      - services_config:/config:ro
      - media_root:/media_root:ro
    environment:
      CONTAINER_NAME: harbor

  upstream:
    container_name: upstream
    image: dtcooper/carb-liquidsoap:${CARB_VERSION:-latest}
    restart: always
    build:
      context: ./liquidsoap
      dockerfile: Dockerfile
    volumes:
      - services_config:/config:ro
    environment:
      CONTAINER_NAME: upstream

  logs:
    container_name: logs
    image: amir20/dozzle:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      DOZZLE_BASE: "/logs"
      DOZZLE_TAILSIZE: 5000

volumes:
  postgres_data:
  redis_data:
  services_config:
  static_root:
  media_root:

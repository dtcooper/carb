{% if HTTPS_ENABLED|int %}
server {
    listen 80 default_server reuseport;
    listen [::]:80 default_server reuseport;

    location '/.well-known/acme-challenge' {
        default_type "text/plain";
        proxy_pass http://localhost:8080;
    }

    location / {
        return 301 https://$http_host$request_uri;
    }
}
{% endif %}

upstream app {
    server app:8000;
}

upstream logs {
    server logs:8080;
}

upstream sse {
    server sse:3000;
}

{% if ZOOM_ENABLED|int %}
    upstream zoom {
        server zoom:6080;
    }
{% endif %}

{% if HARBOR_TELNET_ENABLED|int %}
    upstream harbor-telnet {
        server harbor-telnet:7681;
    }
{% endif %}

server {
    server_name {{ DOMAIN_NAME }};

    {% if HTTPS_ENABLED|int %}
        listen 443 ssl default_server reuseport;
        listen [::]:443 ssl default_server reuseport;

        ssl_certificate /etc/letsencrypt/live/{{ DOMAIN_NAME }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ DOMAIN_NAME }}/privkey.pem;

        include {{ env('SSL_OPTIONS_PATH') }};
    {% else %}
        listen 80 default_server reuseport;
        listen [::]:80 default_server reuseport;
    {% endif %}

    location = /favicon.ico {
        return 204;
        access_log off;
        log_not_found off;
    }

    {% if not DEBUG|int %}
        # gunicorn won't serve static root
        location /static/ {
            alias /static_root/;
        }
    {% endif %}

    location /media/ {
        alias /media_root/;
    }

    location /protected/logs/ {
        internal;
        proxy_pass http://logs/logs/;
        proxy_buffering off;
        proxy_cache off;
    }

    # Use = sign here to ONLY allow base URL to be accessed by X-Accel-Redirect,
    # which means a logged in user can't send a message.
    location = /protected/sse {
        internal;
        proxy_pass http://sse/;
        proxy_buffering off;
        proxy_cache off;
    }

    {% if HARBOR_TELNET_ENABLED|int %}
        location /protected/telnet/ {
            internal;
            proxy_pass http://harbor-telnet/;
            proxy_buffering off;
            proxy_cache off;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    {% endif %}

    {% if ZOOM_ENABLED|int %}
        location /protected/websockify {
            internal;

            proxy_http_version 1.1;
            proxy_pass http://zoom/;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # VNC connection timeout
            proxy_read_timeout 61s;

            # Disable cache
            proxy_buffering off;
        }

        location /zoom/vnc/ {
            index vnc.html;
            alias /usr/share/noVNC/;
        }
    {% endif %}

    {% if ICECAST_ENABLED|int %}
        # Optionally forward /live URL on Icecast, useful for https or clean URLs
        location = /live {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_pass http://icecast:8000;
        }
    {% endif %}

    location / {
        # Probably shouldn't use S3 if these are no good?
        client_max_body_size 1024M;
        client_body_buffer_size 1024M;
        client_body_timeout 150;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_redirect off;
        proxy_pass http://app;
    }
}
